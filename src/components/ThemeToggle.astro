---
---

<button
  id="theme-toggle"
  type="button"
  class="p-2 text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg relative"
  aria-label="Toggle dark mode"
>
  <!-- Sun icon -->
  <i id="theme-toggle-light-icon" class="fas fa-sun w-5 h-5 absolute transition-opacity duration-300 text-lg"></i>
  <!-- Moon icon -->
  <i id="theme-toggle-dark-icon" class="fas fa-moon w-5 h-5 absolute transition-opacity duration-300 text-lg"></i>
  <!-- System icon -->
  <i id="theme-toggle-system-icon" class="fas fa-desktop w-5 h-5 absolute transition-opacity duration-300 text-lg"></i>
  <!-- Spacer to maintain button size -->
  <span class="w-5 h-5 inline-block"></span>
</button>

<script>
  const themeToggleBtn = document.getElementById('theme-toggle');
  const html = document.documentElement;
  const lightIcon = document.getElementById('theme-toggle-light-icon');
  const darkIcon = document.getElementById('theme-toggle-dark-icon');
  const systemIcon = document.getElementById('theme-toggle-system-icon');
  const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');

  function applyTheme(theme) {
    if (theme === 'dark') {
      html.classList.add('dark');
    } else if (theme === 'light') {
      html.classList.remove('dark');
    } else {
      // System
      if (darkMediaQuery.matches) {
        html.classList.add('dark');
      } else {
        html.classList.remove('dark');
      }
    }
    updateIcons();
  }

  function getNextTheme(current) {
    return current === 'light' ? 'dark' : current === 'dark' ? 'system' : 'light';
  }

  function getStoredTheme() {
    return localStorage.getItem('theme') || 'system';
  }

  function updateIcons() {
    const theme = getStoredTheme();
    const isDark = theme === 'dark' || (theme === 'system' && darkMediaQuery.matches);

    if (lightIcon && darkIcon && systemIcon) {
      lightIcon.style.opacity = theme === 'light' ? '1' : '0';
      darkIcon.style.opacity = theme === 'dark' ? '1' : '0';
      systemIcon.style.opacity = theme === 'system' ? '1' : '0';
    }
  }

  function toggleTheme() {
    const current = getStoredTheme();
    const next = getNextTheme(current);

    if (next === 'system') {
      localStorage.removeItem('theme');
    } else {
      localStorage.setItem('theme', next);
    }

    applyTheme(next);
  }

  // Apply theme on load
  applyTheme(getStoredTheme());

  // Update when system theme changes and we're in "system" mode
  darkMediaQuery.addEventListener('change', () => {
    if (!localStorage.getItem('theme')) {
      applyTheme('system');
    }
  });

  themeToggleBtn?.addEventListener('click', toggleTheme);
</script>
